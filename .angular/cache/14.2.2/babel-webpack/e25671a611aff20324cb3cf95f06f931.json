{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:8080/temas';\nexport let TemaService = /*#__PURE__*/(() => {\n  class TemaService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getAll() {\n      return this.http.get(baseUrl);\n    }\n\n    get(id) {\n      return this.http.get(`${baseUrl}/${id}`); // Corregido: Usar comillas francesas\n    }\n\n    create(data) {\n      console.log(data);\n      const formData = new FormData();\n      formData.append('title', data.title);\n      formData.append('status', data.status);\n      formData.append('content', data.content);\n      return this.http.post(`${baseUrl}`, formData, {\n        responseType: 'text'\n      }); // Corregido: Usar comillas francesas\n    }\n\n    update(id, data) {\n      if (data && data.nombre !== undefined && data.duracion !== undefined) {\n        // Convertir a FormData\n        const bodyData = new FormData();\n        bodyData.append('id', id.toString());\n        bodyData.append('nombre', data.nombre.toString());\n        bodyData.append('duracion', data.duracion.toString());\n        return this.http.put(`${baseUrl}`, bodyData, {\n          responseType: 'text'\n        });\n      } else {\n        // Manejar el caso en que data o sus propiedades sean indefinidas\n        return new Observable();\n      }\n    }\n\n    delete(id) {\n      return this.http.delete(`${baseUrl}/delete/${id}`, {\n        responseType: 'text'\n      }); // Corregido: Usar comillas francesas\n    }\n\n    deleteAll() {\n      return this.http.delete(baseUrl);\n    }\n\n    findByTitle(nombre) {\n      return this.http.get(`${baseUrl}?nombre=${nombre}`); // Corregido: Usar comillas francesas\n    }\n\n  }\n\n  TemaService.ɵfac = function TemaService_Factory(t) {\n    return new (t || TemaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TemaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TemaService,\n    factory: TemaService.ɵfac,\n    providedIn: 'root'\n  });\n  return TemaService;\n})();","map":null,"metadata":{},"sourceType":"module"}