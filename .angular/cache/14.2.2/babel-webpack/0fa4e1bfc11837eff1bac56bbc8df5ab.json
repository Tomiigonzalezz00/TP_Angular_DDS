{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/autocomplete\";\nimport * as i7 from \"@angular/material/core\";\n\nfunction AppComponent_mat_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n  }\n}\n\nexport class AppComponent {\n  constructor() {\n    this.title = 'AngularDDS';\n    this.myControl = new FormControl();\n    this.options = ['One', 'Two', 'Three'];\n  }\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => this.filter(value)));\n  }\n\n  filter(value) {\n    return this.options.filter(option => option.toLowerCase().indexOf(value.toLowerCase()) === 0);\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 22,\n  vars: 5,\n  consts: [[1, \"navbar\", \"navbar-expand\", \"navbar-dark\", \"bg-dark\"], [\"href\", \"#\", 1, \"navbar-brand\"], [1, \"navbar-nav\", \"mr-auto\"], [1, \"nav-item\"], [\"routerLink\", \"cursos\", 1, \"nav-link\"], [\"routerLink\", \"add\", 1, \"nav-link\"], [1, \"container\", \"mt-3\"], [1, \"example-form\"], [1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Pick one\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"autoActiveFirstOption\", \"\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"nav\", 0)(2, \"a\", 1);\n      i0.ɵɵtext(3, \"Test DDS\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"li\", 3)(6, \"a\", 4);\n      i0.ɵɵtext(7, \"Cursos\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"li\", 3)(9, \"a\", 5);\n      i0.ɵɵtext(10, \"Add\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(11, \"div\", 6);\n      i0.ɵɵelement(12, \"router-outlet\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"form\", 7)(14, \"mat-form-field\", 8)(15, \"mat-label\");\n      i0.ɵɵtext(16, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 9);\n      i0.ɵɵelementStart(18, \"mat-autocomplete\", 10, 11);\n      i0.ɵɵtemplate(20, AppComponent_mat_option_20_Template, 2, 2, \"mat-option\", 12);\n      i0.ɵɵpipe(21, \"async\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(19);\n\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(21, 3, ctx.filteredOptions));\n    }\n  },\n  dependencies: [i1.NgForOf, i2.RouterOutlet, i2.RouterLinkWithHref, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgForm, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.MatAutocomplete, i6.MatAutocompleteTrigger, i7.MatOption, i3.FormControlDirective, i1.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAT,QAA4B,gBAA5B;AAEA,SAASC,GAAT,EAAcC,SAAd,QAA+B,gBAA/B;;;;;;;;;;;;ICwBMC;IACEA;IACFA;;;;;IAF2DA;IACzDA;IAAAA;;;;ADlBR,OAAM,MAAOC,YAAP,CAAmB;EALzBC;IAME,aAAQ,YAAR;IACA,iBAAyB,IAAIL,WAAJ,EAAzB;IACA,eAAU,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CAAV;EAaD;;EAVCM,QAAQ;IACN,KAAKC,eAAL,GAAuB,KAAKC,SAAL,CAAeC,YAAf,CAA4BC,IAA5B,CACrBR,SAAS,CAAC,EAAD,CADY,EAErBD,GAAG,CAACU,KAAK,IAAI,KAAKC,MAAL,CAAYD,KAAZ,CAAV,CAFkB,CAAvB;EAID;;EAEDC,MAAM,CAACD,KAAD,EAAc;IAClB,OAAO,KAAKE,OAAL,CAAaD,MAAb,CAAoBE,MAAM,IAAIA,MAAM,CAACC,WAAP,GAAqBC,OAArB,CAA6BL,KAAK,CAACI,WAAN,EAA7B,MAAsD,CAApF,CAAP;EACD;;AAfsB;;;mBAAZX;AAAY;;;QAAZA;EAAYa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVzBlB,4BAAK,CAAL,EAAK,KAAL,EAAK,CAAL,EAAK,CAAL,EAAK,GAAL,EAAK,CAAL;MAEqCA;MAAQA;MACzCA,+BAAgC,CAAhC,EAAgC,IAAhC,EAAgC,CAAhC,EAAgC,CAAhC,EAAgC,GAAhC,EAAgC,CAAhC;MAE4CA;MAAMA;MAEhDA,8BAAqB,CAArB,EAAqB,GAArB,EAAqB,CAArB;MACuCA;MAAGA;MAI9CA;MACEA;MACFA;MAGFA,iCAA2B,EAA3B,EAA2B,gBAA3B,EAA2B,CAA3B,EAA2B,EAA3B,EAA2B,WAA3B;MAEeA;MAAMA;MACjBA;MAMAA;MACEA;;MAGFA;;;;;;MANOA;MAAAA,4CAAyB,iBAAzB,EAAyBmB,GAAzB;MAG0BnB;MAAAA","names":["FormControl","map","startWith","i0","AppComponent","constructor","ngOnInit","filteredOptions","myControl","valueChanges","pipe","value","filter","options","option","toLowerCase","indexOf","selectors","decls","vars","consts","template","_r0"],"sourceRoot":"","sources":["C:\\Users\\tomii\\git\\ngDDS2023\\src\\app\\app.component.ts","C:\\Users\\tomii\\git\\ngDDS2023\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'AngularDDS';\n  myControl: FormControl = new FormControl();\n  options = ['One', 'Two', 'Three'];\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this.filter(value))\n    );\n  }\n\n  filter(value: string): string[] {\n    return this.options.filter(option => option.toLowerCase().indexOf(value.toLowerCase()) === 0);\n  }\n}\n\n\n\n\n","<div>\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <a href=\"#\" class=\"navbar-brand\">Test DDS</a>\n    <div class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a routerLink=\"cursos\" class=\"nav-link\">Cursos</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"add\" class=\"nav-link\">Add</a>\n      </li>\n    </div>\n  </nav>\n  <div class=\"container mt-3\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Number</mat-label>\n    <input type=\"text\"\n           placeholder=\"Pick one\"\n           aria-label=\"Number\"\n           matInput\n           [formControl]=\"myControl\"\n           [matAutocomplete]=\"auto\">\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n        {{option}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>"]},"metadata":{},"sourceType":"module"}