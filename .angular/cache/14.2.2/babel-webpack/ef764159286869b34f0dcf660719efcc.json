{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/curso.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/autocomplete\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"../curso-details/curso-details.component\";\n\nfunction CursoListComponent_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r3.nombre);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r3.nombre, \" \");\n  }\n}\n\nfunction CursoListComponent_li_17_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const curso_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" (\", curso_r4.tema.nombre, \") \");\n  }\n}\n\nfunction CursoListComponent_li_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 16);\n    i0.ɵɵlistener(\"click\", function CursoListComponent_li_17_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const curso_r4 = restoredCtx.$implicit;\n      const i_r5 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.setActiveElement(curso_r4, i_r5));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, CursoListComponent_li_17_div_2_Template, 2, 1, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const curso_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", i_r5 == ctx_r2.currentIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", curso_r4.nombre, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", curso_r4.tema);\n  }\n}\n\nexport class CursoListComponent {\n  constructor(cursoService) {\n    this.cursoService = cursoService;\n    this.cursos = [];\n    this.displayedCursos = [];\n    this.currentElement = {};\n    this.currentIndex = -1;\n    this.title = '';\n    this.myControl = new FormControl();\n  }\n\n  ngOnInit() {\n    this.retrieveCursos();\n  }\n\n  retrieveCursos() {\n    this.cursoService.getAll().subscribe(data => {\n      this.cursos = data;\n      this.displayedCursos = data; // Inicialmente, mostrar todos los cursos\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  setActiveElement(element, index) {\n    this.currentElement = element;\n    this.currentIndex = index;\n  }\n\n  removeAllElements() {\n    this.cursoService.deleteAll().subscribe(res => {\n      console.log(res);\n      this.refreshList();\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  searchTitle() {\n    this.displayedCursos = this.cursos.filter(curso => curso.nombre?.toLowerCase().includes(this.title.toLowerCase()));\n  }\n\n}\n\nCursoListComponent.ɵfac = function CursoListComponent_Factory(t) {\n  return new (t || CursoListComponent)(i0.ɵɵdirectiveInject(i1.CursoService));\n};\n\nCursoListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CursoListComponent,\n  selectors: [[\"app-curso-list\"]],\n  decls: 20,\n  vars: 8,\n  consts: [[1, \"list\", \"row\"], [1, \"col-md-8\"], [1, \"input-group\", \"mb-3\"], [1, \"example-form\"], [1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Buscar curso\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"autoActiveFirstOption\", \"\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"col-md-6\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"viewMode\", \"currentElement\"], [3, \"value\"], [1, \"list-group-item\", 3, \"click\"], [4, \"ngIf\"]],\n  template: function CursoListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3)(4, \"mat-form-field\", 4);\n      i0.ɵɵelement(5, \"input\", 5);\n      i0.ɵɵelementStart(6, \"mat-autocomplete\", 6, 7);\n      i0.ɵɵtemplate(8, CursoListComponent_mat_option_8_Template, 2, 2, \"mat-option\", 8);\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"div\", 9)(11, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function CursoListComponent_Template_button_click_11_listener() {\n        return ctx.searchTitle();\n      });\n      i0.ɵɵtext(12, \" Buscar \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(13, \"div\", 11)(14, \"h4\");\n      i0.ɵɵtext(15, \"Listado Cursos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"ul\", 12);\n      i0.ɵɵtemplate(17, CursoListComponent_li_17_Template, 3, 4, \"li\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 11);\n      i0.ɵɵelement(19, \"app-curso-details\", 14);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(7);\n\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 6, ctx.filteredOptions));\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.displayedCursos);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"viewMode\", true)(\"currentElement\", ctx.currentElement);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgForm, i4.MatFormField, i5.MatInput, i6.MatAutocomplete, i6.MatAutocompleteTrigger, i7.MatOption, i3.FormControlDirective, i8.CursoDetailsComponent, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjdXJzby1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAT,QAA4B,gBAA5B;;;;;;;;;;;;;ICWYC;IAIEA;IACFA;;;;;IAHEA;IAEAA;IAAAA;;;;;;IA0BNA;IACEA;IACFA;;;;;IADEA;IAAAA;;;;;;;;IARJA;IAIEA;MAAA;MAAA;MAAA;MAAA;MAAA,OAASA,uDAAT;IAAmC,CAAnC;IAEAA;IACAA;IAGFA;;;;;;;IAPEA;IAGAA;IAAAA;IACMA;IAAAA;;;;ADlCd,OAAM,MAAOC,kBAAP,CAAyB;EAQ7BC,YAAoBC,YAApB,EAA8C;IAA1B;IAPpB,cAAkB,EAAlB;IACA,uBAA2B,EAA3B;IACA,sBAAwB,EAAxB;IACA,oBAAe,CAAC,CAAhB;IACA,aAAQ,EAAR;IACA,iBAAY,IAAIJ,WAAJ,EAAZ;EAEkD;;EAElDK,QAAQ;IACN,KAAKC,cAAL;EACD;;EAEDA,cAAc;IACZ,KAAKF,YAAL,CAAkBG,MAAlB,GAA2BC,SAA3B,CACGC,IAAD,IAAS;MACP,KAAKC,MAAL,GAAcD,IAAd;MACA,KAAKE,eAAL,GAAuBF,IAAvB,CAFO,CAEsB;IAC9B,CAJH,EAKGG,KAAD,IAAU;MACRC,OAAO,CAACD,KAAR,CAAcA,KAAd;IACD,CAPH;EASD;;EAEDE,gBAAgB,CAACC,OAAD,EAAiBC,KAAjB,EAA8B;IAC5C,KAAKC,cAAL,GAAsBF,OAAtB;IACA,KAAKG,YAAL,GAAoBF,KAApB;EACD;;EAEDG,iBAAiB;IACf,KAAKf,YAAL,CAAkBgB,SAAlB,GAA8BZ,SAA9B,CACGa,GAAD,IAAQ;MACNR,OAAO,CAACS,GAAR,CAAYD,GAAZ;MACA,KAAKE,WAAL;IACD,CAJH,EAKGX,KAAD,IAAU;MACRC,OAAO,CAACD,KAAR,CAAcA,KAAd;IACD,CAPH;EASD;;EAEDY,WAAW;IACT,KAAKb,eAAL,GAAuB,KAAKD,MAAL,CAAYe,MAAZ,CAAoBC,KAAD,IACxCA,KAAK,CAACC,MAAN,EAAcC,WAAd,GAA4BC,QAA5B,CAAqC,KAAKC,KAAL,CAAWF,WAAX,EAArC,CADqB,CAAvB;EAGD;;AA/C4B;;;mBAAlB1B,oBAAkBD;AAAA;;;QAAlBC;EAAkB6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV/BlC,+BAAsB,CAAtB,EAAsB,KAAtB,EAAsB,CAAtB,EAAsB,CAAtB,EAAsB,KAAtB,EAAsB,CAAtB,EAAsB,CAAtB,EAAsB,MAAtB,EAAsB,CAAtB,EAAsB,CAAtB,EAAsB,gBAAtB,EAAsB,CAAtB;MAMUA;MAOAA;MACEA;;MAMFA;MAGJA,gCAAgC,EAAhC,EAAgC,QAAhC,EAAgC,EAAhC;MAIIA;QAAA,OAASmC,iBAAT;MAAsB,CAAtB;MAEAnC;MACFA;MAINA,iCAAsB,EAAtB,EAAsB,IAAtB;MACMA;MAAcA;MAClBA;MACEA;MAWFA;MAEFA;MACEA;MACFA;;;;;;MA1CUA;MAAAA,4CAAyB,iBAAzB,EAAyBoC,GAAzB;MAKqBpC;MAAAA;MAwBPA;MAAAA;MAYHA;MAAAA,gCAAiB,gBAAjB,EAAiBmC,kBAAjB","names":["FormControl","i0","CursoListComponent","constructor","cursoService","ngOnInit","retrieveCursos","getAll","subscribe","data","cursos","displayedCursos","error","console","setActiveElement","element","index","currentElement","currentIndex","removeAllElements","deleteAll","res","log","refreshList","searchTitle","filter","curso","nombre","toLowerCase","includes","title","selectors","decls","vars","consts","template","ctx","_r0"],"sourceRoot":"","sources":["C:\\Users\\tomii\\git\\ngDDS2023\\src\\app\\components\\curso-list\\curso-list.component.ts","C:\\Users\\tomii\\git\\ngDDS2023\\src\\app\\components\\curso-list\\curso-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Curso } from 'src/app/models/curso.model';\nimport { CursoService } from 'src/app/services/curso.service';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-curso-list',\n  templateUrl: './curso-list.component.html',\n  styleUrls: ['./curso-list.component.css'],\n})\nexport class CursoListComponent implements OnInit {\n  cursos: Curso[] = [];\n  displayedCursos: Curso[] = [];\n  currentElement: Curso = {};\n  currentIndex = -1;\n  title = '';\n  myControl = new FormControl();\n\n  constructor(private cursoService: CursoService) {}\n\n  ngOnInit(): void {\n    this.retrieveCursos();\n  }\n\n  retrieveCursos(): void {\n    this.cursoService.getAll().subscribe(\n      (data) => {\n        this.cursos = data;\n        this.displayedCursos = data; // Inicialmente, mostrar todos los cursos\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  setActiveElement(element: Curso, index: number): void {\n    this.currentElement = element;\n    this.currentIndex = index;\n  }\n\n  removeAllElements(): void {\n    this.cursoService.deleteAll().subscribe(\n      (res) => {\n        console.log(res);\n        this.refreshList();\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  searchTitle(): void {\n    this.displayedCursos = this.cursos.filter((curso) =>\n      curso.nombre?.toLowerCase().includes(this.title.toLowerCase())\n    );\n  }\n}\n","<div class=\"list row\">\n  <div class=\"col-md-8\">\n    <div class=\"input-group mb-3\">\n      <form class=\"example-form\">\n        <mat-form-field class=\"example-full-width\">\n          <!--  <mat-label> Cursos </mat-label> -->\n          <input\n            type=\"text\"\n            placeholder=\"Buscar curso\"\n            matInput\n            [formControl]=\"myControl\"\n            [matAutocomplete]=\"auto\"\n          />\n          <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n            <mat-option\n              *ngFor=\"let option of filteredOptions | async\"\n              [value]=\"option.nombre\"\n            >\n              {{ option.nombre }}\n            </mat-option>\n          </mat-autocomplete>\n        </mat-form-field>\n      </form>\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary\"\n          type=\"button\"\n          (click)=\"searchTitle()\"\n        >\n          Buscar\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-6\">\n    <h4>Listado Cursos</h4>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item\"\n        *ngFor=\"let curso of displayedCursos; let i = index\"\n        [class.active]=\"i == currentIndex\"\n        (click)=\"setActiveElement(curso, i)\"\n      >\n        {{ curso.nombre }}\n        <div *ngIf=\"curso.tema\">\n          ({{ curso.tema.nombre }})\n        </div>\n      </li>\n    </ul>\n  </div>\n  <div class=\"col-md-6\">\n    <app-curso-details [viewMode]=\"true\" [currentElement]=\"currentElement\"></app-curso-details>\n  </div>\n</div>\n\n"]},"metadata":{},"sourceType":"module"}